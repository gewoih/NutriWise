// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NutriWise.Infrastructure.Database;

#nullable disable

namespace NutriWise.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AllergyUserProfile", b =>
                {
                    b.Property<Guid>("AllergiesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserProfilesId")
                        .HasColumnType("uuid");

                    b.HasKey("AllergiesId", "UserProfilesId");

                    b.HasIndex("UserProfilesId");

                    b.ToTable("AllergyUserProfile");
                });

            modelBuilder.Entity("KitchenEquipmentUserProfile", b =>
                {
                    b.Property<Guid>("KitchenEquipmentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserProfilesId")
                        .HasColumnType("uuid");

                    b.HasKey("KitchenEquipmentsId", "UserProfilesId");

                    b.HasIndex("UserProfilesId");

                    b.ToTable("KitchenEquipmentUserProfile");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Product.FoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = new Guid("aed2d5d0-1baf-4b65-9cd7-8b938398b44a"),
                            Name = "Vegetables"
                        },
                        new
                        {
                            Id = new Guid("776abb02-0fcc-4ad3-b5e7-9b50e34617ff"),
                            Name = "Meats"
                        },
                        new
                        {
                            Id = new Guid("c1accd7d-995f-449d-b598-a85360d6cb99"),
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = new Guid("816a7cca-ebea-4e5f-9eb0-498894e28395"),
                            Name = "Grains and Legumes"
                        },
                        new
                        {
                            Id = new Guid("baad7895-49e2-4cc8-8b40-4f53dd02dc30"),
                            Name = "Nuts and Seeds"
                        },
                        new
                        {
                            Id = new Guid("80735ea8-6301-48eb-8249-4578981b97c6"),
                            Name = "Oils and Fats"
                        },
                        new
                        {
                            Id = new Guid("dd9d8ae5-cd0a-4ecd-ab69-bfe974d541ce"),
                            Name = "Herbs and Spices"
                        },
                        new
                        {
                            Id = new Guid("291bdc89-fd59-416f-b444-52bbfdf99a73"),
                            Name = "Baking Ingredients"
                        });
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Product.FoodSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("FoodSubCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03c6acb5-e654-4497-b9b7-7ac9c973543c"),
                            CategoryId = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Citrus Fruits"
                        },
                        new
                        {
                            Id = new Guid("928b5b5b-a149-44f8-b243-3a724d1eba6c"),
                            CategoryId = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Berries"
                        },
                        new
                        {
                            Id = new Guid("c16d80ba-6b7a-4ef7-a879-05f3f88c27a2"),
                            CategoryId = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Stone Fruits"
                        },
                        new
                        {
                            Id = new Guid("5e172221-57ba-4ae8-b2a2-f045f2b25092"),
                            CategoryId = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Tropical Fruits"
                        },
                        new
                        {
                            Id = new Guid("a754df1c-db94-41ef-828b-856b8d9600d1"),
                            CategoryId = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Pome Fruits"
                        },
                        new
                        {
                            Id = new Guid("6ae81459-579d-4a92-888f-d3f1f3e56491"),
                            CategoryId = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Melons"
                        },
                        new
                        {
                            Id = new Guid("c61871d2-0801-4144-8ebe-66042de8a923"),
                            CategoryId = new Guid("75de2bb8-11cc-4f8f-8613-121ca18a8c9c"),
                            Name = "Dried Fruits"
                        },
                        new
                        {
                            Id = new Guid("9ea992a1-b818-4b63-ac23-c9f9b188d583"),
                            CategoryId = new Guid("aed2d5d0-1baf-4b65-9cd7-8b938398b44a"),
                            Name = "Leafy Greens"
                        },
                        new
                        {
                            Id = new Guid("0cb713f1-7d24-4c5b-9936-78f34c19142d"),
                            CategoryId = new Guid("aed2d5d0-1baf-4b65-9cd7-8b938398b44a"),
                            Name = "Cruciferous Vegetables"
                        },
                        new
                        {
                            Id = new Guid("d25f7edb-0709-4a75-85c4-e508c5df0f48"),
                            CategoryId = new Guid("aed2d5d0-1baf-4b65-9cd7-8b938398b44a"),
                            Name = "Root Vegetables"
                        },
                        new
                        {
                            Id = new Guid("6b503ebf-7280-41a0-afe4-c09737d8e751"),
                            CategoryId = new Guid("aed2d5d0-1baf-4b65-9cd7-8b938398b44a"),
                            Name = "Allium Vegetables"
                        },
                        new
                        {
                            Id = new Guid("48e2ae8b-ecd7-499c-b8e6-01aab7b14c5b"),
                            CategoryId = new Guid("aed2d5d0-1baf-4b65-9cd7-8b938398b44a"),
                            Name = "Squash Vegetables"
                        },
                        new
                        {
                            Id = new Guid("2382c00d-8751-4e88-abc4-f85f37c5b499"),
                            CategoryId = new Guid("aed2d5d0-1baf-4b65-9cd7-8b938398b44a"),
                            Name = "Nightshades"
                        },
                        new
                        {
                            Id = new Guid("b6a98d97-e15d-492a-846b-17ea179b7092"),
                            CategoryId = new Guid("776abb02-0fcc-4ad3-b5e7-9b50e34617ff"),
                            Name = "Beef"
                        },
                        new
                        {
                            Id = new Guid("a158d6ca-3e82-444a-b305-c96e45ec3a80"),
                            CategoryId = new Guid("776abb02-0fcc-4ad3-b5e7-9b50e34617ff"),
                            Name = "Pork"
                        },
                        new
                        {
                            Id = new Guid("838f7c7e-c03b-48c0-a023-1e7e20d6596a"),
                            CategoryId = new Guid("776abb02-0fcc-4ad3-b5e7-9b50e34617ff"),
                            Name = "Poultry"
                        },
                        new
                        {
                            Id = new Guid("53ef3c99-32d4-44ab-9c0d-864d28ce9c37"),
                            CategoryId = new Guid("776abb02-0fcc-4ad3-b5e7-9b50e34617ff"),
                            Name = "Fish"
                        },
                        new
                        {
                            Id = new Guid("9de41ce9-7ecf-4bae-8dc3-3c07da6561f2"),
                            CategoryId = new Guid("776abb02-0fcc-4ad3-b5e7-9b50e34617ff"),
                            Name = "Shellfish"
                        },
                        new
                        {
                            Id = new Guid("c4534728-bbf8-40aa-ba51-d2b86b0b114a"),
                            CategoryId = new Guid("c1accd7d-995f-449d-b598-a85360d6cb99"),
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = new Guid("67d023bb-4c41-47c5-9331-389c0fbea7ce"),
                            CategoryId = new Guid("c1accd7d-995f-449d-b598-a85360d6cb99"),
                            Name = "Milk"
                        },
                        new
                        {
                            Id = new Guid("38c4fc47-d01a-42c5-bb82-aff9e102dfe9"),
                            CategoryId = new Guid("c1accd7d-995f-449d-b598-a85360d6cb99"),
                            Name = "Other Dairy"
                        },
                        new
                        {
                            Id = new Guid("6e32f70b-a61b-4d6c-8584-9ce2faf65fa8"),
                            CategoryId = new Guid("816a7cca-ebea-4e5f-9eb0-498894e28395"),
                            Name = "Rice"
                        },
                        new
                        {
                            Id = new Guid("bfffed6b-ad4a-4234-94ab-a2e74f113853"),
                            CategoryId = new Guid("816a7cca-ebea-4e5f-9eb0-498894e28395"),
                            Name = "Other Grains"
                        },
                        new
                        {
                            Id = new Guid("d7afa165-abab-4cd8-880c-3d5c0d5eef7e"),
                            CategoryId = new Guid("816a7cca-ebea-4e5f-9eb0-498894e28395"),
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = new Guid("1cc6ffeb-b5bb-43a7-8c24-9b59451c6b97"),
                            CategoryId = new Guid("816a7cca-ebea-4e5f-9eb0-498894e28395"),
                            Name = "Legumes"
                        },
                        new
                        {
                            Id = new Guid("fb65bf4f-958f-4d70-a62d-cb5c9cf163a7"),
                            CategoryId = new Guid("baad7895-49e2-4cc8-8b40-4f53dd02dc30"),
                            Name = "Nuts"
                        },
                        new
                        {
                            Id = new Guid("a71d8fba-913f-4fed-b91f-c1ce0f8ccb2d"),
                            CategoryId = new Guid("baad7895-49e2-4cc8-8b40-4f53dd02dc30"),
                            Name = "Seeds"
                        },
                        new
                        {
                            Id = new Guid("bb2d4bba-299a-4492-8c18-bb5b9abe413a"),
                            CategoryId = new Guid("80735ea8-6301-48eb-8249-4578981b97c6"),
                            Name = "Oils"
                        },
                        new
                        {
                            Id = new Guid("751e597e-d74c-4327-8508-571edb1e94ec"),
                            CategoryId = new Guid("dd9d8ae5-cd0a-4ecd-ab69-bfe974d541ce"),
                            Name = "Herbs"
                        },
                        new
                        {
                            Id = new Guid("2383e528-a293-4515-903f-82623e2e095d"),
                            CategoryId = new Guid("dd9d8ae5-cd0a-4ecd-ab69-bfe974d541ce"),
                            Name = "Spices"
                        },
                        new
                        {
                            Id = new Guid("314e9055-4782-4ea3-ac36-17786810b7d6"),
                            CategoryId = new Guid("291bdc89-fd59-416f-b444-52bbfdf99a73"),
                            Name = "Sugars"
                        },
                        new
                        {
                            Id = new Guid("41838eb2-8aec-4738-89d1-6b66cbc6f2c5"),
                            CategoryId = new Guid("291bdc89-fd59-416f-b444-52bbfdf99a73"),
                            Name = "Baking Ingredients"
                        });
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Product.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Calories")
                        .HasColumnType("double precision");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Fats")
                        .HasColumnType("double precision");

                    b.Property<Guid>("FoodSubCategoryId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Proteins")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("FoodSubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Recipe.FoodRecipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<string>("CookingInstructions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Recipe.RecipeIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("FoodRecipeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MeasurmentType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FoodRecipeId");

                    b.HasIndex("ProductId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.UserProfile.Allergy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Allergies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f76ebb60-8b54-42e1-a284-4a4a04f18e50"),
                            Name = "Gluten"
                        },
                        new
                        {
                            Id = new Guid("29e54674-0d1d-494e-ba86-5cfe7619c2c1"),
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = new Guid("604d731e-840e-48c2-a4e6-d29eb9b1cc46"),
                            Name = "Peanuts"
                        },
                        new
                        {
                            Id = new Guid("3b3220e7-0e56-4966-87c2-10166f4f13eb"),
                            Name = "Tree Nuts"
                        },
                        new
                        {
                            Id = new Guid("2d2bd723-7181-427e-b685-54c798455b88"),
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = new Guid("08fc2e24-ada6-4627-a7c9-54c6710b89bf"),
                            Name = "Shellfish"
                        },
                        new
                        {
                            Id = new Guid("416046a2-0c68-4cfa-936b-81cb3e50172f"),
                            Name = "Fish"
                        },
                        new
                        {
                            Id = new Guid("c2eab0a0-98f7-40c7-8968-9e040cb67f1d"),
                            Name = "Soy"
                        },
                        new
                        {
                            Id = new Guid("29d0f11c-1441-480e-88e3-bd168f491bf7"),
                            Name = "Wheat"
                        },
                        new
                        {
                            Id = new Guid("4e6ff995-5be4-4fbf-aab7-5f81e8459dca"),
                            Name = "Sesame"
                        });
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.UserProfile.KitchenEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KitchenEquipments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db54a856-91f1-4295-b0c3-b4bd60e56403"),
                            Name = "Blender"
                        },
                        new
                        {
                            Id = new Guid("d7a93261-1a31-463f-88a9-c122b54c2008"),
                            Name = "Oven"
                        },
                        new
                        {
                            Id = new Guid("60209fe5-8c58-4870-b8d9-de72f1e74739"),
                            Name = "Microwave"
                        },
                        new
                        {
                            Id = new Guid("6053e43a-e3d4-450a-951a-f83c2d0c67c1"),
                            Name = "Air Fryer"
                        },
                        new
                        {
                            Id = new Guid("c2d8da1f-b39d-4e87-abea-ec302da66149"),
                            Name = "Food Processor"
                        },
                        new
                        {
                            Id = new Guid("28df446c-190f-4a0b-9176-4bf58ee9db08"),
                            Name = "Grill"
                        },
                        new
                        {
                            Id = new Guid("faf16d73-52ce-4991-9945-010dcce84762"),
                            Name = "Stove"
                        },
                        new
                        {
                            Id = new Guid("c7e90907-fbd8-493b-b680-aaf52a4bfc4c"),
                            Name = "Slow Cooker"
                        },
                        new
                        {
                            Id = new Guid("7c49854b-ecdf-467f-9f75-aecdcaf74eac"),
                            Name = "Pressure Cooker"
                        },
                        new
                        {
                            Id = new Guid("cf55ec6e-d045-482b-8111-d5320fff5f47"),
                            Name = "Toaster"
                        },
                        new
                        {
                            Id = new Guid("f194e8da-668f-4e0d-ae92-6d6404a6742c"),
                            Name = "Rice Cooker"
                        },
                        new
                        {
                            Id = new Guid("50ec680b-c656-4796-a3ce-239496d37c9e"),
                            Name = "Mixer"
                        });
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.UserProfile.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ActivityLevel")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("BirthdayDate")
                        .HasColumnType("date");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DietGoalType")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("AllergyUserProfile", b =>
                {
                    b.HasOne("NutriWise.Domain.Entities.UserProfile.Allergy", null)
                        .WithMany()
                        .HasForeignKey("AllergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NutriWise.Domain.Entities.UserProfile.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KitchenEquipmentUserProfile", b =>
                {
                    b.HasOne("NutriWise.Domain.Entities.UserProfile.KitchenEquipment", null)
                        .WithMany()
                        .HasForeignKey("KitchenEquipmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NutriWise.Domain.Entities.UserProfile.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Product.FoodSubCategory", b =>
                {
                    b.HasOne("NutriWise.Domain.Entities.Product.FoodCategory", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Product.Product", b =>
                {
                    b.HasOne("NutriWise.Domain.Entities.Product.FoodSubCategory", "FoodSubCategory")
                        .WithMany()
                        .HasForeignKey("FoodSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodSubCategory");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Recipe.RecipeIngredient", b =>
                {
                    b.HasOne("NutriWise.Domain.Entities.Recipe.FoodRecipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("FoodRecipeId");

                    b.HasOne("NutriWise.Domain.Entities.Product.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.UserProfile.UserProfile", b =>
                {
                    b.HasOne("NutriWise.Domain.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Product.FoodCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("NutriWise.Domain.Entities.Recipe.FoodRecipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
